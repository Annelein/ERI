[client]

  # The maximum length (in bytes) of the "input" field, to accept to the finder.
  inputLengthMax = 50

[CORS]
  # Not defining allowedOrigins will use wildcard '*', meaning all clients are allowed.
  #allowedOrigins = [
  #  "http://example.org",
  #  "https://api.example.com",
  #]

[server]
  # The interface and port to listen on, "0.0.0.0" means all interfaces
  listenOn = "0.0.0.0:1338"

  headers = [
    {name = "Strict-Transport-Security", value = "max-age=31536000; includeSubDomains"},
    {name = "Content-Security-Policy", value = "default-src 'none'"},
    {name = "X-Frame-Options", value = "DENY"},
    {name = "X-XSS-Protection", value = "1; mode=block"},
    {name = "X-Content-Type-Options", value = "nosniff"},
    {name = "Referrer-Policy", value = "strict-origin"}
  ]

  [server.hash]
    # The key for the 128bit highwayhash algorithm. Must be exactly 32 bytes.
    key = "00000000000000000000000000000000"

  [server.log]
    # The minimum logging level to report, @see https://github.com/Sirupsen/logrus#level-logging
    level = "debug"

  [server.profiler]
    enable = true
    prefix = "debug"

  [server.finder]
    useBuckets = true

  [server.validator]

    # Use this resolver, instead of the local DNS hostname configured for this system
    resolver = "8.8.8.8"

    # Choose from: "structure", "lookup", "connect" (not recommended)
    # For initial setup and learning, structure is probably most suitable
    suggest = "lookup"

#  [server.backend]
#    # Drivers: https://github.com/golang/go/wiki/SQLDrivers
#    # Postgres: https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
#    driver = "postgres"
#    url = "postgresql://postgres@localhost:15432/eri?sslmode=disable"

  [server.graphql]
    prettyOutput = true
    graphiQL = true
    playground = true

    [server.rateLimiter]
    rate = 100
    capacity = 500

    # amount of time a rate-limited request is allowed to wait for. Anything above this is aborted, to help protect
    # against connection draining.
    parkedTTL = "100ms"
